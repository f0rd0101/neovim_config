" ====================================
" Основные настройки
" ====================================
set encoding=utf-8
syntax on
set number
set termguicolors
set wildmode=longest,list

" ====================================
" Подключаем плагины через vim-plug
" ====================================
call plug#begin('~/.config/nvim/plugged')

" Тема Catppuccin
Plug 'catppuccin/nvim', { 'as': 'catppuccin' }

" Файловое дерево
Plug 'nvim-tree/nvim-tree.lua'
Plug 'nvim-tree/nvim-web-devicons'

" Статуслайн с отображением git-ветки
Plug 'nvim-lualine/lualine.nvim'

call plug#end()

" ====================================
" Включаем тему
" ====================================
colorscheme catppuccin

" ====================================
" Настройка nvim-tree + логика переключения фокуса
" ====================================
lua << EOF
-- Функция для переключения фокуса между деревом и активным окном
function ToggleTreeFocus()
  local view = require("nvim-tree.view")
  if view.is_visible() then
    local tree_win = view.get_winnr()
    if vim.api.nvim_get_current_win() == tree_win then
      vim.cmd("wincmd p") -- Вернуться к предыдущему окну (файл)
    else
      vim.api.nvim_set_current_win(tree_win) -- Переключить фокус на дерево
    end
  end
end

require("nvim-tree").setup({
  view = {
    width = 35,
    side = "left",
  },
  git = {
    enable = true,
  },
  renderer = {
    icons = {
      show = {
        file = true,
        folder = true,
        git = true,
      },
    },
  },
})

-- Горячие клавиши для дерева
vim.api.nvim_set_keymap("n", "<C-n>", ":NvimTreeToggle<CR>", { noremap = true, silent = true })
vim.api.nvim_set_keymap("n", "<Leader>r", ":NvimTreeRefresh<CR>", { noremap = true, silent = true })
vim.api.nvim_set_keymap("n", "<Leader>n", ":NvimTreeFindFile<CR>", { noremap = true, silent = true })

-- Новый биндинг для переключения фокуса между деревом и файлом
vim.api.nvim_set_keymap("n", "<C-e>", ":lua ToggleTreeFocus()<CR>", { noremap = true, silent = true })
EOF

" ====================================
" Статуслайн (lualine)
" ====================================
lua << EOF
require('lualine').setup {
  options = {
    theme = 'catppuccin',
    icons_enabled = true,
    section_separators = { left = '', right = ''},
    component_separators = { left = '', right = ''},
  },
  sections = {
    lualine_a = {'mode'},
    lualine_b = {'branch', 'diff', 'diagnostics'},
    lualine_c = {'filename'},
    lualine_x = {'encoding', 'fileformat', 'filetype'},
    lualine_y = {'progress'},
    lualine_z = {'location'}
  }
}
EOF

" ====================================
" Терминал снизу (toggle)
" ====================================
function! ToggleTerminal()
  for w in range(1, winnr('$'))
    let buf = winbufnr(w)
    if getbufvar(buf, '&buftype') ==# 'terminal'
      execute w . "wincmd c"
      return
    endif
  endfor
  belowright split
  resize 15
  terminal
endfunction

" Горячие клавиши для терминала
nnoremap <C-t> :call ToggleTerminal()<CR>
tnoremap <Esc> <C-\><C-n>
